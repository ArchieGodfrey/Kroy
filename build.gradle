buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

allprojects {
    apply plugin: "java-library"
    apply plugin: 'org.junit.platform.gradle.plugin'

    version = '1.0'
    ext {
        appName = "Kroy"
        gdxVersion = '1.9.10'
        roboVMVersion = '2.3.7'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        junitPlatformVersion = '1.0.2'
        junitJupiterVersion  = '5.0.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
 
    jar {
        baseName = 'junit5-gradle-consumer'
        version = '1.0.0-SNAPSHOT'
    }
    
    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.compilerArgs += '-parameters'
    }
    
    junitPlatform {
        // platformVersion '1.0.2'
        filters {
            engines {
                // include 'junit-jupiter', 'junit-vintage'
                // exclude 'custom-engine'
            }
            tags {
                // include 'fast'
                exclude 'slow'
            }
            // includeClassNamePattern '.*Test'
        }
        // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
        // enableStandardTestTask true
        // reportsDir file('build/test-results/junit-platform') // this is the default
    }
    
    dependencies {
        // JUnit Jupiter API and TestEngine implementation
        testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    
        // To avoid compiler warnings about @API annotations in JUnit code
        testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
    }

    test {
        useJUnitPlatform()
    }

}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"
        api "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
        api "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    }
}

project(":core") {
    apply plugin: "java-library"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
        api "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
        api "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    }
}
